package  {		import flash.display.MovieClip;	import asf.plugins.loadermax.LoaderMaxFactoryPlugin;	import asf.view.BaseLoaderApplication;	import flash.net.URLRequest;	import asf.events.DependenciesProgressEvent;	import view.Loading;	import flash.events.Event;	import asf.utils.Align;	import asf.events.ApplicationEvent;		public class MainLoading1 extends BaseLoaderApplication {				private var loading:MainLoadingViewController;				public function MainLoading1( ) 		{			super( new LoaderMaxFactoryPlugin( ) );						//Method in BaseLoaderApplication						loading = new MainLoadingViewController( new Loading( ) );						addChild( app.view );			addChild( loading.view );						loading.animateIn( ).queue( loadApplicationConfigFile, new URLRequest( "mainloading_1.xml" ) );						Align.add( loading.view, Align.CENTER + Align.MIDDLE, { width: 0, height: 0 } );		}				protected override function appLoadProgress(event:DependenciesProgressEvent):void		{			loading.setProgress( event.bytesLoaded / event.bytesTotal );		}				protected override function appWillDispatchLoadComplete(event:Event):void		{			app.removeEventListener(ApplicationEvent.WILL_DISPATCH_LOAD_COMPLETE, appWillDispatchLoadComplete );						app.pauseLoading( );			loading.animateOut( ).queue( app.resumeLoading );		}				//Override method in BaseLoaderApplication		protected override function appLoadComplete(event:DependenciesProgressEvent):void		{			app.layers.img.addChild( app.dependencies.getImage( "sampleImage" ) );			app.layers.swf.addChild( app.dependencies.getSWF( "sampleSWF" ) );		}	}}